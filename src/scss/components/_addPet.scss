@use "../utils/placeholders";
@use "../utils/variables" as var;
@use "../utils/functions" as fn;
@use "../utils/mixins" as mx;

.add-pet-section {
  @include mx.mq("lg") {
    display: flex;
    gap: 32px;
    align-items: center;
    justify-content: center;
  }
}

.addPet-img {
  margin-bottom: 10px;
}

.addPet-background {
  background-color: fn.get-color("light");
  border-radius: 30px;
  padding: 28px 20px 0 20px;

  @include mx.mq("md") {
    padding: 40px 135px;
  }

  &.dark {
    background-color: fn.get-color("light-dark");
  }
}

.addPet-title {
  @include mx.font(28, 28, -3, 700);

  color: fn.get-color("dark");
  margin-bottom: 24px;

  &>span {
    @include mx.font(14, 18, 0, 700);
    color: fn.get-color("grey");
  }
}

.addPet-icon-wrap {
  display: flex;
  gap: 8px;
  align-items: center;
}

.addPet-icon {
  display: flex;
  align-items: center;
  justify-content: center;

  border-radius: 50%;
  cursor: pointer;

  &.woman {
    background-color: fn.get-color("female");

    &:hover,
    &:focus,
    &.active {
      background-color: fn.get-color("female-hover");
    }
  }

  &.man {
    background-color: fn.get-color("male");

    &:hover,
    &:focus,
    &.active {
      background-color: fn.get-color("male-hover");
    }
  }

  &.man-woman {
    background-color: fn.get-color("background-secondary");

    &:hover,
    &:focus,
    &.active {
      background-color: fn.get-color("accent");
    }
  }
}

.icon-man,
.icon-woman {
  fill: fn.get-color("single-sex-icon");

  width: 32px;
  height: 32px;
  padding: 6px;

  &:hover,
  &:focus,
  &.active {
    fill: fn.get-color("light");
  }
}

.icon-man-woman {
  fill: fn.get-color("accent");

  width: 32px;
  height: 32px;
  padding: 6px;

  &:hover,
  &:focus,
  &.active {
    fill: fn.get-color("light");
  }
}

.pet-avatar {
  display: flex;
  justify-content: center;

  margin-bottom: 8px;
}

.icon-pet-avatar {
  height: 68px;
  width: 68px;
  object-fit: cover;
  border-radius: 50%;

  @include mx.mq("md") {
    height: 86px;
    width: 86px;
  }
}

.add-mypet-input-wrap {
  display: flex;
  flex-direction: column;
  gap: 16px;

  @include mx.mq("md") {
    display: flex;
    flex-direction: row;
    align-items: center;
    gap: 12px;
    justify-content: space-between;
  }
}

.my-pet-button-wrapper {
  display: flex;
  gap: 8px;
  justify-content: flex-end;
  align-items: center;
}

.form-button.back {
  color: fn.get-color("dark");
  background-color: fn.get-color("background-btn");
  width: 100px;
  text-align: center;


  &:hover {
    color: fn.get-color("light");
    background-color: fn.get-color("backdrop");
  }

  &.remove {
    @include mx.font(12, 14, 0, 700);
    width: 170px;

    text-transform: none;
  }

  @include mx.mq("md") {
    width: 170px;
  }

  @include mx.mq("lg") {
    &.remove {
      @include mx.font(14, 18, -2, 700);
      width: auto;
    }
  }
}

.form-button.submit {
  width: 100px;
  transition: all 0.5s ease-in;


  &:hover {
    color: fn.get-color("accent");
    background-color: fn.get-color("background-hover");
  }

  &.to-publish {
    @include mx.font(12, 14, 0, 700);
    text-transform: none;
    height: 52px;
    width: 170px;

    display: flex;
    gap: 8px;
    align-items: center;
    justify-content: center;
    flex-wrap: nowrap;
  }

  @include mx.mq("md") {
    width: 170px;

    &.to-publish {
      width: 170px;
      height: 48px;
      @include mx.font(14, 18, 0, 700);
    }
  }

  @include mx.mq("lg") {
    &.to-publish {
      @include mx.font(14, 18, 0, 700);
      height: auto;
      width: auto;
    }
  }
}


.icon-check {
  width: 18px;
  height: 18px;
  fill: fn.get-color("light");
}